############### SELECTS ###############
#Quantitative Eurostat Page
#database.select.getIndicatorsForEurostat = SELECT distinct i.id as indicator_id, i.name as indicator_name, t.text as indicator_name_2 FROM indicator i, translation t, dataset d, indicators_in_dataset iid WHERE i.literal_id = t.literal_id AND i.id = iid.indicator_id AND d.id = iid.dataset_id AND d.source LIKE '%eurostat%' AND t.language = 'EN' AND i.id NOT IN(55,56,97) ORDER BY FIELD(i.id, 38, 39, 34, 53, 54, 59) ASC, indicator_name ASC
database.select.getIndicatorsForEurostat = SELECT distinct i.id as indicator_id, i.name as indicator_name, t.text as indicator_name_2 FROM indicator i, translation t, dataset d, indicators_in_dataset iid, methodology m WHERE m.indicator_name_displayed_literal_id = t.literal_id AND m.indicator_id = i.id AND i.id = iid.indicator_id AND d.id = iid.dataset_id AND d.source LIKE '%eurostat%' AND t.language = 'EN' AND i.id NOT IN(55,56,97) ORDER BY FIELD(i.id, 38, 39, 34, 53, 54, 59) ASC, indicator_name ASC
#Qualitative member states
database.select.getCountriesByMatrixPageSection = SELECT DISTINCT n.id as country_id, n.name as country_name, n.country_code as country_code FROM matrix_page mp, nuts n WHERE mp.nuts_id=n.id AND mp.page = ? AND n.country_code NOT IN("UK") ORDER BY FIELD(n.country_code, 'EU28') DESC, n.country_code ASC
database.select.getCountriesByStrategiesPageSection = SELECT DISTINCT n.id as country_id, n.name as country_name, n.country_code as country_code FROM strategies_page sp, nuts n WHERE sp.nuts_id=n.id AND sp.page = ? AND n.country_code NOT IN("UK") ORDER BY FIELD(n.country_code, 'EU28') DESC, n.country_code ASC
#database.select.getCountriesByStrategiesPageSection = (SELECT DISTINCT n.id as country_id, n.name as country_name, n.country_code as country_code FROM nuts n, profile p, value v, translation t WHERE (n.id = p.nuts_id AND p.id = v.profile_id AND v.indicator_id = 126 AND n.literal_id=t.literal_id) AND t.language="EN" AND n.country_code NOT IN ('EU28', 'EU27_2020', 'AL', 'ME', 'MK', 'RS', 'TR', 'UK'))UNION(SELECT DISTINCT n.id as country_id, n.name as country_name, n.country_code as country_code FROM strategies_page sp INNER JOIN nuts n ON n.id = sp.nuts_id INNER JOIN translation t ON n.literal_id=t.literal_id WHERE sp.page = ? AND t.language="EN" AND n.country_code NOT IN ('EU28', 'EU27_2020', 'AL', 'ME', 'MK', 'RS', 'TR', 'UK')) ORDER BY country_code ASC
#Update labels form
database.select.getSectionList = SELECT id as section_id, name as section_name FROM section WHERE tool_id = 2 AND id NOT IN (57, 29, 64, 28, 65) ORDER BY FIELD(section_id, 16, 38, 17, 18, 30, 39, 41, 40, 19, 20, 21, 22, 34, 23, 24, 25, 26, 27, 42, 44, 50, 62, 37)
#Country reports Member States
database.select.getOshAuthoritiesCountries = SELECT DISTINCT (n.literal_id) AS country, n.country_code AS country_code, n.id as country_id, IF(n.name REGEXP 'European Union' || n.name='EU28', n.country_code, CONCAT("(", n.country_code, ") ", n.name)) as country_name, n.name as real_name FROM matrix_page mp INNER JOIN nuts n ON n.id = mp.nuts_id WHERE mp.page = 'MATRIX_AUTHORITY' AND n.country_code != "UK" ORDER BY FIELD(country_code, 'EU28') DESC, country_code ASC;
database.select.getNationalStrategiesCountries = SELECT DISTINCT (n.literal_id) AS country, n.country_code AS country_code, n.id as country_id, CONCAT("(", n.country_code, ") ", n.name) as country_name, n.name as real_name FROM strategies_page sp INNER JOIN nuts n ON n.id=sp.nuts_id WHERE sp.page="STRATEGY" AND n.country_code != "UK" ORDER BY country_code ASC;
database.select.getSocialDialogueCountries = SELECT DISTINCT(n.literal_id) as country, n.country_code AS country_code, n.id as country_id, IF(n.name REGEXP 'European Union' || n.name='EU27_2020', n.country_code, CONCAT("(", n.country_code, ") ", n.name)) as country_name, n.name as real_name FROM nuts n INNER JOIN profile p ON n.id = p.nuts_id INNER JOIN value v ON v.profile_id = p.id WHERE v.indicator_id IN (354,355,356,357) AND n.country_code NOT IN ('AL', 'ME', 'MK', 'RS', 'TR', 'UK', 'IS', 'NO', 'CH') ORDER BY FIELD(country_code, 'EU27_2020') DESC, country_code ASC;
#Methodology
database.select.getSectionsMethodology = SELECT DISTINCT s.id as section_id, s.name as section_name FROM methodology m, section s WHERE m.section_id = s.id AND s.tool_id = 2 ORDER BY FIELD(s.id, 40,41,18,17,38) DESC, s.id ASC
database.select.getIndicatorsBySection = SELECT DISTINCT i.id as indicator_id, i.name as indicator_name, t.text as indicator_name_2 FROM methodology m, indicator i, translation t WHERE t.language="EN" AND t.literal_id = m.indicator_name_displayed_literal_id AND m.indicator_id = i.id AND m.section_id=? AND i.id NOT IN(115, 119)
#Update datasets Page
database.select.getSectionsForDatasetUpdate = SELECT id as section_id, name as section_name FROM osha_dvt.section WHERE tool_id = 2 AND id IN (17, 18, 20, 21, 22, 23, 24, 25, 27)
#database.select.getChartsBySection = SELECT c.id as chart_id, s.id as section_id, t.text as chart_name, d.id as dataset_id, d.source as dataset_name, d.date_from as dataset_year_from, d.date_to as dataset_year_to, i.id as indicator_id FROM indicator i, translation t, indicators_by_chart ibc, chart c, section s , dataset d WHERE c.section_id = s.id AND c.id = ibc.chart_id AND i.id = ibc.indicator_id AND c.id = ibc.chart_id AND ibc.dataset_id = d.id AND i.literal_id = t.literal_id AND t.language = 'EN' AND s.id = ? ORDER BY t.text ASC
#database.select.getChartsBySection = SELECT c.id chart_id, s.id section_id, s.name section_name, c.name chart_name FROM chart c, section s WHERE s.id = ? AND s.id = c.section_id
database.select.getChartsBySection = SELECT DISTINCT c.id chart_id, s.id section_id, s.name section_name, c.name chart_name FROM chart c, section s, indicators_by_chart ibc, dataset d WHERE s.id = ? AND s.id = c.section_id AND c.id = ibc.chart_id AND d.id = ibc.dataset_id AND d.name='BAROMETER_DATA'
#database.select.getIndicatorsByChart = SELECT c.id as chart_id, i.name as chart_name, d.id as dataset_id, d.source as dataset_name, d.date_from as dataset_year_from, d.date_to as dataset_year_to, i.id as indicator_id, i.literal_id FROM indicator i, indicators_by_chart ibc, chart c, dataset d WHERE c.id = ibc.chart_id AND i.id = ibc.indicator_id AND c.id = ibc.chart_id AND ibc.dataset_id = d.id AND c.id = ? ORDER BY i.name ASC
#database.select.getIndicatorsByChart = SELECT c.id as chart_id, t.text as chart_name, d.id as dataset_id, d.source as dataset_name, d.date_from as dataset_year_from, d.date_to as dataset_year_to, i.id as indicator_id, i.literal_id FROM indicator i, indicators_by_chart ibc, chart c, dataset d, translation t WHERE c.id = ibc.chart_id AND i.id = ibc.indicator_id AND c.id = ibc.chart_id AND ibc.dataset_id = d.id AND c.id = ? AND t.language='EN' AND t.literal_id = i.literal_id ORDER BY t.text ASC
database.select.getIndicatorsByChart = SELECT c.id as chart_id, t.text as chart_name, d.id as dataset_id, d.source as dataset_name, d.date_from as dataset_year_from, d.date_to as dataset_year_to, i.id as indicator_id, i.literal_id FROM indicator i, indicators_by_chart ibc, chart c, dataset d, translation t, methodology m WHERE c.id = ibc.chart_id AND i.id = ibc.indicator_id AND c.id = ibc.chart_id AND ibc.dataset_id = d.id AND c.id = ? AND t.language='EN' AND m.indicator_name_displayed_literal_id = t.literal_id AND m.indicator_id = i.id ORDER BY t.text ASC
database.select.getDatasetsForIndicator = SELECT d.id as dataset_id, d.source as dataset_name, d.date_from as dataset_year_from, d.date_to as dataset_year_to FROM dataset d, indicators_in_dataset iid WHERE d.id = iid.dataset_id AND iid.indicator_id = ? ORDER BY dataset_year_from
#Qualitative member states
database.select.getCountriesByMatrixPageSection = SELECT DISTINCT n.id as country_id, n.name as country_name, n.country_code as country_code FROM matrix_page mp, nuts n WHERE mp.nuts_id=n.id AND mp.page = ? AND n.country_code NOT IN("UK") ORDER BY FIELD ('EU28', n.country_code) DESC, n.country_code ASC
database.select.getCountriesByStrategiesPageSection = SELECT DISTINCT n.id as country_id, n.name as country_name, n.country_code as country_code FROM strategies_page sp, nuts n WHERE sp.nuts_id=n.id AND sp.page = ? AND n.country_code NOT IN("UK") ORDER BY n.country_code
#database.select.getMatrixPageDataByCountryAndInstitution = SELECT mp.id data_id, mp.page as page, n.country_code as country_code, mp.check_1 as check_1, mp.check_2 as check_2, mp.check_3 as check_3, mp.check_4 as check_4, t.text as title, t2.text as links, t3.text as description FROM matrix_page mp, nuts n, translation t, translation t2, translation t3 WHERE mp.page="?" AND mp.nuts_id=n.id AND n.country_code = "?" AND mp.check_1=? AND mp.check_2=? AND mp.check_3=? AND mp.check_4=? AND mp.text_1_literal_id = t.literal_id AND t.language="EN" AND mp.text_2_literal_id = t2.literal_id AND t2.language="EN" AND mp.text_3_literal_id = t3.literal_id AND t3.language="EN"
#Update labels form
database.select.getSectionList = SELECT id as section_id, name as section_name FROM section WHERE tool_id = 2 AND id NOT IN (57, 29, 64, 28, 65) ORDER BY FIELD(section_id, 16, 38, 17, 18, 30, 39, 41, 40, 19, 20, 21, 22, 34, 23, 24, 25, 26, 27, 42, 44, 50, 62, 37)
database.select.getChartsBySectionUpdateLabels = SELECT DISTINCT c.id chart_id, s.id section_id, s.name section_name, c.name chart_name FROM chart c, section s, indicators_by_chart ibc, dataset d WHERE s.id = ? AND s.id = c.section_id AND c.id = ibc.chart_id AND d.id = ibc.dataset_id
#Country reports Member States
database.select.getOshAuthoritiesCountries = SELECT DISTINCT (n.literal_id) AS country, n.country_code AS country_code, n.id as country_id, IF(n.name REGEXP 'European Union' || n.name='EU28', n.country_code, CONCAT("(", n.country_code, ") ", n.name)) as country_name, n.name as real_name FROM matrix_page mp INNER JOIN nuts n ON n.id = mp.nuts_id WHERE mp.page = 'MATRIX_AUTHORITY' AND n.country_code != "UK" ORDER BY FIELD(country_code, 'EU28') DESC, country_code ASC;
database.select.getNationalStrategiesCountries = SELECT DISTINCT (n.literal_id) AS country, n.country_code AS country_code, n.id as country_id, CONCAT("(", n.country_code, ") ", n.name) as country_name, n.name as real_name FROM strategies_page sp INNER JOIN nuts n ON n.id=sp.nuts_id WHERE sp.page="STRATEGY" AND n.country_code != "UK" ORDER BY country_code ASC;
database.select.getSocialDialogueCountries = SELECT DISTINCT(n.literal_id) as country, n.country_code AS country_code, n.id as country_id, IF(n.name REGEXP 'European Union' || n.name='EU27_2020', n.country_code, CONCAT("(", n.country_code, ") ", n.name)) as country_name, n.name as real_name FROM nuts n INNER JOIN profile p ON n.id = p.nuts_id INNER JOIN value v ON v.profile_id = p.id WHERE v.indicator_id IN (354,355,356,357) AND n.country_code NOT IN ('AL', 'ME', 'MK', 'RS', 'TR', 'UK', 'IS', 'NO', 'CH') ORDER BY FIELD(country_code, 'EU27_2020') DESC, country_code ASC;

############### UPDATES ###############
#Update datasets Page
database.update.updateIndicatorsDataset = UPDATE indicators_by_chart SET dataset_id = ? WHERE indicator_id = ? AND chart_id = ?
#Update labels Page
database.update.updateDraftText = UPDATE translation SET draft_text = ? WHERE id = ?
database.update.undoDraftText = UPDATE translation SET draft_text = NULL WHERE id = ?
database.update.publishLiteral = UPDATE translation SET text = ?, draft_text = NULL WHERE id = ?